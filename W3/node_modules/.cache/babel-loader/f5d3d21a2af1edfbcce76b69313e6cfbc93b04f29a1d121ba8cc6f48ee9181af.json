{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jge04\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\UMC\\\\w3\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    id: \"\",\n    password: \"\"\n  });\n  const [idError, setIdError] = useState(\"\"); // 아이디 입력 에러 상태\n  const [passwordError, setPasswordError] = useState(\"\"); // 비밀번호 입력 에러 상태\n\n  const [idValid, setIdValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // 유효성 검사\n    validateInput(name, value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // 모든 필드의 유효성 검사를 수행\n    validateAllFields();\n\n    // 제출 시 폼 데이터 전송 확인\n    if (isFormValid()) {\n      console.log(\"Form data submitted:\", formData);\n      alert(\"로그인이 성공적으로 완료되었습니다!\");\n    }\n  };\n\n  // 개별 입력 필드 유효성 검사 함수\n  const validateInput = (name, value) => {\n    switch (name) {\n      case \"id\":\n        if (value.trim() === \"\") {\n          setIdError(\"아이디를 입력해주세요!\");\n        } else {\n          setIdError(\"\");\n          setIdValid(true);\n        }\n        break;\n      case \"password\":\n        if (value.trim() === \"\") {\n          setPasswordError(\"비밀번호를 입력해주세요!\");\n        } else if (value.length < 4) {\n          setPasswordError(\"최소 4자리 이상 입력해주세요.\");\n        } else if (!/[a-zA-Z]/.test(value) || !/\\d/.test(value) || !/[!@#$%^&*()]/.test(value)) {\n          setPasswordError(\"비밀번호는 영어, 숫자, 특수문자를 포함해주세요.\");\n        } else if (value.length > 12) {\n          setPasswordError(\"최대 12자리까지 입력 가능합니다.\");\n        } else {\n          setPasswordError(\"\");\n          setPasswordValid(true);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  // 모든 입력 필드의 유효성 검사 수행 함수\n  const validateAllFields = () => {\n    validateInput(\"id\", formData.id);\n    validateInput(\"password\", formData.password);\n  };\n\n  // 폼 전체 유효성 검사 함수\n  const isFormValid = () => {\n    return formData.id.trim() !== \"\" && formData.password.trim() !== \"\" && !idError && !passwordError;\n  };\n  return /*#__PURE__*/_jsxDEV(LoginpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: formData.id,\n        onChange: handleChange,\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), idError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: idError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: idValid && passwordValid ? \"btnActive\" : \"btnDisabled\",\n      onClick: handleSubmit,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"IhsWhUbdM9muq+gygTQwSGnmLuc=\");\n_c = LoginPage;\nconst LoginpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 80px 0;\n  gap: 45px;\n\n  .header,\n  .moveLogin {\n    font-weight: bold;\n  }\n\n  .inputDiv {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n\n  .inputDiv > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .error {\n    color: red; /* 메시지 색상 */\n    font-size: 12px;\n    padding-left: 15px;\n  }\n\n  input {\n    width: 400px; /* 입력 필드 너비 */\n    height: 40px;\n    padding-left: 15px;\n    border-radius: 20px; /* 입력 필드 테두리 반지름 */\n\n    @media (max-width: 768px) {\n      width: 300px;\n      height: 35px;\n    }\n\n    @media (max-width: 480px) {\n      width: 100%;\n      height: 30px;\n    }\n  }\n\n  button {\n    width: 420px; /* 버튼 너비 */\n    height: 50px;\n    font-weight: bold;\n    font-size: 16px;\n    border-radius: 25px; /* 버튼 테두리 반지름 */\n    cursor: pointer;\n\n    @media (max-width: 768px) {\n      width: 320px;\n      height: 45px;\n    }\n\n    @media (max-width: 480px) {\n      width: 100%;\n      height: 40px;\n    }\n  }\n\n  .btnDisabled {\n    background-color: #ffffff;\n  }\n  .btnActive {\n    background-color: #ffa500;\n  }\n`;\n_c2 = LoginpContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"LoginpContainer\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","id","password","idError","setIdError","passwordError","setPasswordError","idValid","setIdValid","passwordValid","setPasswordValid","handleChange","e","name","value","target","validateInput","handleSubmit","preventDefault","validateAllFields","isFormValid","console","log","alert","trim","length","test","LoginpContainer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/jge04/OneDrive/바탕 화면/UMC/w3/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [idError, setIdError] = useState(\"\"); // 아이디 입력 에러 상태\r\n  const [passwordError, setPasswordError] = useState(\"\"); // 비밀번호 입력 에러 상태\r\n\r\n  const [idValid, setIdValid] = useState(false);\r\n  const [passwordValid, setPasswordValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n\r\n    // 유효성 검사\r\n    validateInput(name, value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // 모든 필드의 유효성 검사를 수행\r\n    validateAllFields();\r\n\r\n    // 제출 시 폼 데이터 전송 확인\r\n    if (isFormValid()) {\r\n      console.log(\"Form data submitted:\", formData);\r\n      alert(\"로그인이 성공적으로 완료되었습니다!\");\r\n    }\r\n  };\r\n\r\n  // 개별 입력 필드 유효성 검사 함수\r\n  const validateInput = (name, value) => {\r\n    switch (name) {\r\n      case \"id\":\r\n        if (value.trim() === \"\") {\r\n          setIdError(\"아이디를 입력해주세요!\");\r\n        } else {\r\n          setIdError(\"\");\r\n          setIdValid(true);\r\n        }\r\n        break;\r\n      case \"password\":\r\n        if (value.trim() === \"\") {\r\n          setPasswordError(\"비밀번호를 입력해주세요!\");\r\n        } else if (value.length < 4) {\r\n          setPasswordError(\"최소 4자리 이상 입력해주세요.\");\r\n        } else if (\r\n          !/[a-zA-Z]/.test(value) ||\r\n          !/\\d/.test(value) ||\r\n          !/[!@#$%^&*()]/.test(value)\r\n        ) {\r\n          setPasswordError(\"비밀번호는 영어, 숫자, 특수문자를 포함해주세요.\");\r\n        } else if (value.length > 12) {\r\n          setPasswordError(\"최대 12자리까지 입력 가능합니다.\");\r\n        } else {\r\n          setPasswordError(\"\");\r\n          setPasswordValid(true);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  // 모든 입력 필드의 유효성 검사 수행 함수\r\n  const validateAllFields = () => {\r\n    validateInput(\"id\", formData.id);\r\n    validateInput(\"password\", formData.password);\r\n  };\r\n\r\n  // 폼 전체 유효성 검사 함수\r\n  const isFormValid = () => {\r\n    return (\r\n      formData.id.trim() !== \"\" &&\r\n      formData.password.trim() !== \"\" &&\r\n      !idError &&\r\n      !passwordError\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoginpContainer>\r\n      <div className=\"header\">로그인 페이지</div>\r\n      <div className=\"inputDiv\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"id\"\r\n          value={formData.id}\r\n          onChange={handleChange}\r\n          placeholder=\"아이디를 입력해주세요.\"\r\n        />\r\n        {idError && <span className=\"error\">{idError}</span>}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          placeholder=\"비밀번호를 입력해주세요.\"\r\n        />\r\n        {passwordError && <span className=\"error\">{passwordError}</span>}\r\n      </div>\r\n      <button\r\n        className={idValid && passwordValid ? \"btnActive\" : \"btnDisabled\"}\r\n        onClick={handleSubmit}\r\n      >\r\n        로그인\r\n      </button>\r\n    </LoginpContainer>\r\n  );\r\n};\r\n\r\nconst LoginpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 80px 0;\r\n  gap: 45px;\r\n\r\n  .header,\r\n  .moveLogin {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .inputDiv {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n  .inputDiv > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .error {\r\n    color: red; /* 메시지 색상 */\r\n    font-size: 12px;\r\n    padding-left: 15px;\r\n  }\r\n\r\n  input {\r\n    width: 400px; /* 입력 필드 너비 */\r\n    height: 40px;\r\n    padding-left: 15px;\r\n    border-radius: 20px; /* 입력 필드 테두리 반지름 */\r\n\r\n    @media (max-width: 768px) {\r\n      width: 300px;\r\n      height: 35px;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      width: 100%;\r\n      height: 30px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 420px; /* 버튼 너비 */\r\n    height: 50px;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    border-radius: 25px; /* 버튼 테두리 반지름 */\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 768px) {\r\n      width: 320px;\r\n      height: 45px;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      width: 100%;\r\n      height: 40px;\r\n    }\r\n  }\r\n\r\n  .btnDisabled {\r\n    background-color: #ffffff;\r\n  }\r\n  .btnActive {\r\n    background-color: #ffa500;\r\n  }\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}