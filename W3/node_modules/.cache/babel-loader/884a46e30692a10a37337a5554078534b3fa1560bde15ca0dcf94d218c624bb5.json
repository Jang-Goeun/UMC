{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jge04\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\UMC\\\\w3\\\\src\\\\pages\\\\MovieDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NO_IMAGE = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSz7ztleRwzXhFdiwBYqZ8cib9RvEsukVVUS3niN1YQ&s\";\nexport const MovieDetailPage = () => {\n  _s();\n  const location = useLocation();\n  const state = location.state || {};\n  const {\n    id\n  } = state;\n  const [movieDetails, setMovieDetails] = useState(state);\n  const [cast, setCast] = useState([]);\n  const [crew, setCrew] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!id) {\n      setLoading(false);\n      return;\n    }\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=YOUR_API_KEY&language=ko-KR`);\n        const creditsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=YOUR_API_KEY&language=ko-KR`);\n        setMovieDetails(movieResponse.data);\n        setCast(creditsResponse.data.cast);\n        setCrew(creditsResponse.data.crew);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    original_title,\n    backdrop_path,\n    poster_path,\n    vote_average,\n    release_date,\n    overview\n  } = movieDetails;\n  const movie_rating = vote_average && \"⭐️\".repeat(Math.floor(vote_average));\n  const summary = overview ? overview : \"TMDB에서 제공하는 API에 상세 줄거리 정보가 없습니다.\";\n  const MovieDetailContainer = styled.div`\n    background-image: url(${\"http://image.tmdb.org/t/p/w500/\" + backdrop_path});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-color: rgba(32, 35, 75, 0.9);\n    background-blend-mode: multiply;\n    padding: 200px 250px;\n    display: flex;\n\n    @media (max-width: 900px) {\n      /* align-items: center; */\n      padding: 80px 180px;\n      flex-direction: column;\n      background-image: none;\n      background-color: hsl(233, 43%, 16%);\n    }\n\n    @media (max-width: 750px) {\n      flex-direction: column;\n      padding: 80px 100px;\n      background-image: none;\n      background-color: hsl(233, 43%, 16%);\n    }\n\n    @media (max-width: 600px) {\n      flex-direction: column;\n      padding: 80px 20px;\n      background-image: none;\n      background-color: hsl(233, 43%, 16%);\n    }\n\n    .backgroundImg {\n      background-color: rgb(255, 255, 255, 0.5);\n    }\n\n    .movie_thumnail {\n      img {\n        width: 370px;\n        height: 490px;\n\n        @media (max-width: 600px) {\n          width: 250px;\n          height: 350px;\n        }\n      }\n    }\n\n    .movie_detail {\n      width: 600px;\n      display: flex;\n      flex-direction: column;\n      gap: 35px;\n      padding: 100px 0 0 100px;\n\n      @media (max-width: 900px) {\n        padding: 20px 0 0 0;\n        width: 500px;\n      }\n\n      @media (max-width: 600px) {\n        padding: 20px 0 0 0;\n        width: 400px;\n        gap: 20px;\n      }\n\n      .title {\n        font-weight: bold;\n        font-size: 30px;\n\n        @media (max-width: 900px) {\n          font-size: 24px;\n        }\n\n        @media (max-width: 600px) {\n          font-size: 20px;\n        }\n      }\n\n      .detail {\n        font-size: 15px;\n\n        @media (max-width: 900px) {\n          font-size: 14px;\n        }\n\n        @media (max-width: 600px) {\n          font-size: 12px;\n        }\n      }\n    }\n  `;\n  const CastContainer = styled.div`\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n\n    .cast-card {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 150px;\n\n      img {\n        width: 150px;\n        height: 225px;\n        object-fit: cover;\n      }\n\n      .name {\n        margin-top: 10px;\n        font-weight: bold;\n        text-align: center;\n      }\n\n      .character {\n        text-align: center;\n      }\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(MovieDetailContainer, {\n    backdropUrl: `http://image.tmdb.org/t/p/w500/${backdrop_path}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_thumnail\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster_path ? `http://image.tmdb.org/t/p/w500/${poster_path}` : NO_IMAGE,\n        alt: \"\\uC601\\uD654 \\uC378\\uB124\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: original_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD3C9\\uC810 \", movie_rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uAC1C\\uBD09\\uC77C \", release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC904\\uAC70\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail\",\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CastContainer, {\n      children: cast.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: member.profile_path ? `http://image.tmdb.org/t/p/w500/${member.profile_path}` : NO_IMAGE,\n          alt: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character\",\n          children: member.character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, member.cast_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CastContainer, {\n      children: crew.filter(member => member.job === \"Director\").map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: member.profile_path ? `http://image.tmdb.org/t/p/w500/${member.profile_path}` : NO_IMAGE,\n          alt: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character\",\n          children: member.job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)]\n      }, member.credit_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetailPage, \"iaKaalbE664MjA0cujiCHBjRsLk=\", false, function () {\n  return [useLocation];\n});\n_c = MovieDetailPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailPage\");","map":{"version":3,"names":["useLocation","useEffect","useState","axios","styled","jsxDEV","_jsxDEV","NO_IMAGE","MovieDetailPage","_s","location","state","id","movieDetails","setMovieDetails","cast","setCast","crew","setCrew","loading","setLoading","fetchMovieDetails","movieResponse","get","creditsResponse","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","original_title","backdrop_path","poster_path","vote_average","release_date","overview","movie_rating","repeat","Math","floor","summary","MovieDetailContainer","div","CastContainer","backdropUrl","className","src","alt","map","member","profile_path","name","character","cast_id","filter","job","credit_id","_c","$RefreshReg$"],"sources":["C:/Users/jge04/OneDrive/바탕 화면/UMC/w3/src/pages/MovieDetailPage.jsx"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NO_IMAGE =\r\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSz7ztleRwzXhFdiwBYqZ8cib9RvEsukVVUS3niN1YQ&s\";\r\n\r\nexport const MovieDetailPage = () => {\r\n  const location = useLocation();\r\n  const state = location.state || {};\r\n  const { id } = state;\r\n\r\n  const [movieDetails, setMovieDetails] = useState(state);\r\n  const [cast, setCast] = useState([]);\r\n  const [crew, setCrew] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const movieResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${id}?api_key=YOUR_API_KEY&language=ko-KR`\r\n        );\r\n        const creditsResponse = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${id}/credits?api_key=YOUR_API_KEY&language=ko-KR`\r\n        );\r\n\r\n        setMovieDetails(movieResponse.data);\r\n        setCast(creditsResponse.data.cast);\r\n        setCrew(creditsResponse.data.crew);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching movie details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  const {\r\n    original_title,\r\n    backdrop_path,\r\n    poster_path,\r\n    vote_average,\r\n    release_date,\r\n    overview,\r\n  } = movieDetails;\r\n\r\n  const movie_rating = vote_average && \"⭐️\".repeat(Math.floor(vote_average));\r\n  const summary = overview\r\n    ? overview\r\n    : \"TMDB에서 제공하는 API에 상세 줄거리 정보가 없습니다.\";\r\n\r\n  const MovieDetailContainer = styled.div`\r\n    background-image: url(${\"http://image.tmdb.org/t/p/w500/\" + backdrop_path});\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-color: rgba(32, 35, 75, 0.9);\r\n    background-blend-mode: multiply;\r\n    padding: 200px 250px;\r\n    display: flex;\r\n\r\n    @media (max-width: 900px) {\r\n      /* align-items: center; */\r\n      padding: 80px 180px;\r\n      flex-direction: column;\r\n      background-image: none;\r\n      background-color: hsl(233, 43%, 16%);\r\n    }\r\n\r\n    @media (max-width: 750px) {\r\n      flex-direction: column;\r\n      padding: 80px 100px;\r\n      background-image: none;\r\n      background-color: hsl(233, 43%, 16%);\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      flex-direction: column;\r\n      padding: 80px 20px;\r\n      background-image: none;\r\n      background-color: hsl(233, 43%, 16%);\r\n    }\r\n\r\n    .backgroundImg {\r\n      background-color: rgb(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .movie_thumnail {\r\n      img {\r\n        width: 370px;\r\n        height: 490px;\r\n\r\n        @media (max-width: 600px) {\r\n          width: 250px;\r\n          height: 350px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .movie_detail {\r\n      width: 600px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 35px;\r\n      padding: 100px 0 0 100px;\r\n\r\n      @media (max-width: 900px) {\r\n        padding: 20px 0 0 0;\r\n        width: 500px;\r\n      }\r\n\r\n      @media (max-width: 600px) {\r\n        padding: 20px 0 0 0;\r\n        width: 400px;\r\n        gap: 20px;\r\n      }\r\n\r\n      .title {\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n\r\n        @media (max-width: 900px) {\r\n          font-size: 24px;\r\n        }\r\n\r\n        @media (max-width: 600px) {\r\n          font-size: 20px;\r\n        }\r\n      }\r\n\r\n      .detail {\r\n        font-size: 15px;\r\n\r\n        @media (max-width: 900px) {\r\n          font-size: 14px;\r\n        }\r\n\r\n        @media (max-width: 600px) {\r\n          font-size: 12px;\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const CastContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n\r\n    .cast-card {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 150px;\r\n\r\n      img {\r\n        width: 150px;\r\n        height: 225px;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .name {\r\n        margin-top: 10px;\r\n        font-weight: bold;\r\n        text-align: center;\r\n      }\r\n\r\n      .character {\r\n        text-align: center;\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <MovieDetailContainer\r\n      backdropUrl={`http://image.tmdb.org/t/p/w500/${backdrop_path}`}\r\n    >\r\n      <div className=\"movie_thumnail\">\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `http://image.tmdb.org/t/p/w500/${poster_path}`\r\n              : NO_IMAGE\r\n          }\r\n          alt=\"영화 썸네일\"\r\n        />\r\n      </div>\r\n      <div className=\"movie_detail\">\r\n        <div className=\"title\">{original_title}</div>\r\n        <div>평점 {movie_rating}</div>\r\n        <div>개봉일 {release_date}</div>\r\n        <div>줄거리</div>\r\n        <div className=\"detail\">{summary}</div>\r\n      </div>\r\n      <CastContainer>\r\n        {cast.map((member) => (\r\n          <div key={member.cast_id} className=\"cast-card\">\r\n            <img\r\n              src={\r\n                member.profile_path\r\n                  ? `http://image.tmdb.org/t/p/w500/${member.profile_path}`\r\n                  : NO_IMAGE\r\n              }\r\n              alt={member.name}\r\n            />\r\n            <div className=\"name\">{member.name}</div>\r\n            <div className=\"character\">{member.character}</div>\r\n          </div>\r\n        ))}\r\n      </CastContainer>\r\n      <CastContainer>\r\n        {crew\r\n          .filter((member) => member.job === \"Director\")\r\n          .map((member) => (\r\n            <div key={member.credit_id} className=\"cast-card\">\r\n              <img\r\n                src={\r\n                  member.profile_path\r\n                    ? `http://image.tmdb.org/t/p/w500/${member.profile_path}`\r\n                    : NO_IMAGE\r\n                }\r\n                alt={member.name}\r\n              />\r\n              <div className=\"name\">{member.name}</div>\r\n              <div className=\"character\">{member.job}</div>\r\n            </div>\r\n          ))}\r\n      </CastContainer>\r\n    </MovieDetailContainer>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GACZ,oGAAoG;AAEtG,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,KAAK,GAAGD,QAAQ,CAACC,KAAK,IAAI,CAAC,CAAC;EAClC,MAAM;IAAEC;EAAG,CAAC,GAAGD,KAAK;EAEpB,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACS,KAAK,CAAC;EACvD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,EAAE,EAAE;MACPQ,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAClC,sCAAqCX,EAAG,sCAC3C,CAAC;QACD,MAAMY,eAAe,GAAG,MAAMrB,KAAK,CAACoB,GAAG,CACpC,sCAAqCX,EAAG,8CAC3C,CAAC;QAEDE,eAAe,CAACQ,aAAa,CAACG,IAAI,CAAC;QACnCT,OAAO,CAACQ,eAAe,CAACC,IAAI,CAACV,IAAI,CAAC;QAClCG,OAAO,CAACM,eAAe,CAACC,IAAI,CAACR,IAAI,CAAC;QAClCG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,IAAIO,OAAO,EAAE;IACX,oBAAOb,OAAA;MAAAsB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,MAAM;IACJC,cAAc;IACdC,aAAa;IACbC,WAAW;IACXC,YAAY;IACZC,YAAY;IACZC;EACF,CAAC,GAAGzB,YAAY;EAEhB,MAAM0B,YAAY,GAAGH,YAAY,IAAI,IAAI,CAACI,MAAM,CAACC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC,CAAC;EAC1E,MAAMO,OAAO,GAAGL,QAAQ,GACpBA,QAAQ,GACR,mCAAmC;EAEvC,MAAMM,oBAAoB,GAAGxC,MAAM,CAACyC,GAAI;AAC1C,4BAA4B,iCAAiC,GAAGX,aAAc;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,MAAMY,aAAa,GAAG1C,MAAM,CAACyC,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,oBACEvC,OAAA,CAACsC,oBAAoB;IACnBG,WAAW,EAAG,kCAAiCb,aAAc,EAAE;IAAAN,QAAA,gBAE/DtB,OAAA;MAAK0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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}